@page
@model BookInfoFinder.Pages.Admin.ManageBookModel
@{
    ViewData["Title"] = "Qu·∫£n l√Ω s√°ch";
}

<h2 class="text-primary">üìö Qu·∫£n l√Ω s√°ch</h2>

<!-- ‚úÖ DEBUG INFO -->
<div class="alert alert-info mb-3">
    <strong>üîç Debug Info:</strong> 
    Trang @Model.Page/@Model.TotalPages | 
    T·ªïng: @Model.TotalBooks s√°ch | 
    Search: "@Model.Search" | 
    Category: @Model.Category | 
    Hi·ªÉn th·ªã: @Model.Books.Count s√°ch
</div>

<form method="get" class="row g-2 mb-3">
    <div class="col-md-6">
        <input type="text" name="search" class="form-control" placeholder="T√¨m theo t√™n s√°ch..."
            value="@Model.Search" />
    </div>
    <div class="col-md-4">
        <select name="category" class="form-select">
            <option value="">--L·ªçc theo th·ªÉ lo·∫°i--</option>
            @foreach (var cat in Model.Categories)
            {
                <option value="@cat.CategoryId" selected="@(Model.Category == cat.CategoryId)">@cat.Name</option>
            }
        </select>
    </div>
    <div class="col-md-2 d-flex gap-1">
        <button type="submit" class="btn btn-outline-primary">üîç L·ªçc</button>
        <a href="/Admin/ManageBook" class="btn btn-outline-secondary" title="Reset">üîÑ</a>
    </div>
</form>

<div class="row mb-3">
    <div class="col-md-6">
        <form method="post" asp-page-handler="ExportCsv" class="d-inline">
            <input type="hidden" name="Search" value="@Model.Search" />
            <input type="hidden" name="Category" value="@Model.Category" />
            <button type="submit" class="btn btn-outline-success">üì§ Xu·∫•t CSV (@Model.TotalBooks s√°ch)</button>
        </form>
    </div>
    <div class="col-md-6 text-end">
        <a asp-page="./AddBook" class="btn btn-success">+ Th√™m s√°ch m·ªõi</a>
    </div>
</div>

<hr />

@if (Model.Books.Any())
{
    <div class="table-responsive">
        <table class="table table-bordered table-striped mt-4">
            <thead class="table-dark">
                <tr>
                    <th style="width: 80px;">·∫¢nh</th>
                    <th>T√™n s√°ch</th>
                    <th>ISBN</th>
                    <th>T√°c gi·∫£</th>
                    <th>Th·ªÉ lo·∫°i</th>
                    <th>NXB</th>
                    <th>NƒÉm XB</th>
                    <th>M√¥ t·∫£</th>
                    <th>T√≥m t·∫Øt</th>
                    <th>Tag</th>
                    <th style="width: 120px;">Thao t√°c</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model.Books)
                {
                    <tr>
                        <td>
                            @if (!string.IsNullOrWhiteSpace(book.ImageBase64))
                            {
                                <img src="@book.ImageBase64" alt="·∫¢nh s√°ch" width="70" height="70" style="object-fit:cover;" />
                            }
                            else
                            {
                                <span class="text-muted">Kh√¥ng c√≥ ·∫£nh</span>
                            }
                        </td>
                        <td><strong>@book.Title</strong><br><small class="text-muted">ID: @book.BookId</small></td>
                        <td><code>@book.ISBN</code></td>
                        <td>@book.Author?.Name</td>
                        <td><span class="badge bg-primary">@book.Category?.Name</span></td>
                        <td>@book.Publisher?.Name</td>
                        <td>@(book.PublicationDate != default ? book.PublicationDate.Year.ToString() : "N/A")</td>
                        <td>@(book.Description?.Length > 50 ? book.Description.Substring(0, 50) + "..." : book.Description)</td>
                        <td>@(book.Abstract?.Length > 50 ? book.Abstract.Substring(0, 50) + "..." : book.Abstract)</td>
                        <td>
                            @if (book.BookTags?.Any() == true)
                            {
                                @foreach (var bt in book.BookTags)
                                {
                                    <span class="badge bg-info text-dark me-1">@bt.Tag?.Name</span>
                                }
                            }
                            else
                            {
                                <span class="text-muted">Kh√¥ng c√≥ tag</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group-vertical gap-1">
                                <a asp-page="/Admin/UpdateBook" 
                                   asp-route-id="@book.BookId" 
                                   asp-route-search="@Model.Search"
                                   asp-route-category="@Model.Category" 
                                   asp-route-page="@Model.Page" 
                                   class="btn btn-sm btn-warning"
                                   title="S·ª≠a s√°ch n√†y">‚úèÔ∏è</a>

                                <a href="/BookDetail/@book.BookId" 
                                   class="btn btn-sm btn-primary" 
                                   title="Xem chi ti·∫øt s√°ch">üëÅÔ∏è</a>

                                <button type="button" 
                                        class="btn btn-sm btn-danger" 
                                        title="X√≥a s√°ch n√†y" 
                                        data-bs-toggle="modal"
                                        data-bs-target="#confirmDeleteModal" 
                                        data-id="@book.BookId"
                                        data-title="@book.Title">üóëÔ∏è</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-warning">
        <h5>üì≠ Kh√¥ng t√¨m th·∫•y s√°ch n√†o</h5>
        @if (!string.IsNullOrEmpty(Model.Search) || Model.Category.HasValue)
        {
            <p>Kh√¥ng c√≥ s√°ch n√†o ph√π h·ª£p v·ªõi b·ªô l·ªçc hi·ªán t·∫°i.</p>
            <a href="/Admin/ManageBook" class="btn btn-primary">üîÑ Reset b·ªô l·ªçc</a>
        }
        else
        {
            <p>Ch∆∞a c√≥ s√°ch n√†o trong h·ªá th·ªëng.</p>
            <a asp-page="./AddBook" class="btn btn-success">+ Th√™m s√°ch ƒë·∫ßu ti√™n</a>
        }
    </div>
}

@if (Model.TotalPages > 1)
{
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            <!-- Previous -->
            <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                <a class="page-link" 
                   asp-route-page="@(Model.Page - 1)" 
                   asp-route-search="@Model.Search"
                   asp-route-category="@Model.Category" 
                   tabindex="@(Model.Page == 1 ? "-1" : "")">¬´ Tr∆∞·ªõc</a>
            </li>

            <!-- Page Numbers with Smart Range -->
            @{
                int startPage = Math.Max(1, Model.Page - 2);
                int endPage = Math.Min(Model.TotalPages, Model.Page + 2);
                
                // Adjust range if we're near the beginning or end
                if (endPage - startPage < 4)
                {
                    if (startPage == 1)
                        endPage = Math.Min(Model.TotalPages, startPage + 4);
                    else if (endPage == Model.TotalPages)
                        startPage = Math.Max(1, endPage - 4);
                }
            }

            <!-- First page if not in range -->
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" 
                       asp-route-page="1" 
                       asp-route-search="@Model.Search"
                       asp-route-category="@Model.Category">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
            }

            <!-- Page range -->
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.Page ? "active" : "")">
                    <a class="page-link" 
                       asp-route-page="@i" 
                       asp-route-search="@Model.Search"
                       asp-route-category="@Model.Category">@i</a>
                </li>
            }

            <!-- Last page if not in range -->
            @if (endPage < Model.TotalPages)
            {
                @if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
                <li class="page-item">
                    <a class="page-link" 
                       asp-route-page="@Model.TotalPages" 
                       asp-route-search="@Model.Search"
                       asp-route-category="@Model.Category">@Model.TotalPages</a>
                </li>
            }

            <!-- Next -->
            <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" 
                   asp-route-page="@(Model.Page + 1)" 
                   asp-route-search="@Model.Search"
                   asp-route-category="@Model.Category">Sau ¬ª</a>
            </li>
        </ul>
    </nav>

    <!-- ‚úÖ DEBUG: Page info -->
    <div class="text-center mt-2">
        <small class="text-muted">
            Hi·ªÉn th·ªã @((Model.Page - 1) * Model.PageSize + 1) - @(Math.Min(Model.Page * Model.PageSize, Model.TotalBooks)) 
            trong t·ªïng s·ªë @Model.TotalBooks s√°ch
        </small>
    </div>
}

<!-- Modal x√°c nh·∫≠n x√≥a -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-page-handler="Delete">
            <input type="hidden" name="id" id="deleteBookId" />
            <input type="hidden" name="search" value="@Model.Search" />
            <input type="hidden" name="category" value="@Model.Category" />
            <input type="hidden" name="page" value="@Model.Page" />
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteLabel">üóëÔ∏è X√°c nh·∫≠n x√≥a</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ƒê√≥ng"></button>
                </div>
                <div class="modal-body">
                    <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s√°ch <strong id="deleteBookTitle"></strong> kh√¥ng?</p>
                    <div class="alert alert-warning">
                        <small>‚ö†Ô∏è H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">H·ªßy</button>
                    <button type="submit" class="btn btn-danger">üóëÔ∏è X√≥a</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // ‚úÖ FIX: Modal x√°c nh·∫≠n x√≥a v·ªõi title
        const deleteModal = document.getElementById('confirmDeleteModal');
        if (deleteModal) {
            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const bookId = button.getAttribute('data-id');
                const bookTitle = button.getAttribute('data-title');
                
                const hiddenInput = document.getElementById('deleteBookId');
                const titleSpan = document.getElementById('deleteBookTitle');
                
                if (hiddenInput) hiddenInput.value = bookId;
                if (titleSpan) titleSpan.textContent = bookTitle || 's√°ch n√†y';
                
                console.log(`üóëÔ∏è Delete modal opened for Book ID: ${bookId}, Title: ${bookTitle}`);
            });
        }

        // ‚úÖ DEBUG: Log current page info
        console.log(`üìö ManageBook Debug:`, {
            page: @Model.Page,
            totalPages: @Model.TotalPages,
            totalBooks: @Model.TotalBooks,
            search: '@Model.Search',
            category: @(Model.Category?.ToString() ?? "null"),
            booksCount: @Model.Books.Count
        });
    </script>
}